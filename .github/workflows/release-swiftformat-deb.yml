name: Build and Release SwiftFormat .deb Package

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Daily at midnight

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    container: swift:5.9-jammy

    steps:
      - name: Fetch latest SwiftFormat tag
        id: fetch_latest_tag
        run: |
          apt update -y && apt install jq curl -y
          echo "tag=$(
            curl https://api.github.com/repos/discordbm/discordbm/releases/latest | \
              jq -r '.tag_name'
          )" >> $GITHUB_OUTPUT

      - name: Check if release already exists
        id: check-release
        run: |
          apt update -y && apt install curl -y
          TAG=${{ steps.fetch_latest_tag.outputs.tag }}
          RELEASE=$(
            curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG
              -w "%{http_code}"
              -o /dev/null
          )
          echo "RELEASE is $RELEASE"
          if [ "$RELEASE" == "200" ]; then
            echo "Release for tag $TAG already exists. Stopping workflow."
            exit 1
          fi

      - name: Checkout SwiftFormat
        uses: actions/checkout@v4
        with:
          repository: nicklockwood/SwiftFormat
          ref: ${{ steps.fetch_latest_tag.outputs.tag }}

      - name: Build SwiftFormat
        run: swift build -c release --static-swift-stdlib

      - name: Create .deb package
        run: |
          TAG=${{ steps.fetch_latest_tag.outputs.tag }}
          mkdir -p swiftformat/DEBIAN
          cp .build/release/swiftformat swiftformat/usr/local/bin
          echo "Package: swiftformat\nVersion: $TAG\nMaintainer: Mahdi Bahrami <contact@mahdibm.com>\nArchitecture: arm64\nDescription: Nick Lockwood's SwiftFormat: A formatting tool for Swift programming language" > swiftformat/DEBIAN/control
          dpkg-deb --build swiftformat swiftformat-$TAG-linux-arm64.deb

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.fetch_latest_tag.outputs.tag }}
          release_name: SwiftFormat Release ${{ steps.fetch_latest_tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload .deb Package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./swiftformat/swiftformat-${{ steps.fetch_latest_tag.outputs.tag }}-linux-arm64.deb
          asset_name: swiftformat-${{ steps.fetch_latest_tag.outputs.tag }}-linux-arm64.deb
          asset_content_type: application/octet-stream
